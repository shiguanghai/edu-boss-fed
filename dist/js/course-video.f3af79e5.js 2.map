{"version":3,"sources":["webpack:///./src/views/course/video.vue?c8b7","webpack:///./src/services/aliyun-upload.ts","webpack:///./src/views/course/video.vue","webpack:///./src/views/course/video.vue?f941","webpack:///./src/views/course/video.vue?7326","webpack:///./src/services/course-section.ts","webpack:///./src/services/course-lesson.ts","webpack:///./src/services/course.ts","webpack:///./node_modules/core-js/modules/es.function.name.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","slot","_v","_s","courseName","sectionName","lessonName","ref","on","handleUpload","$event","$router","back","uploadPercent","isTransCodeSuccess","_e","staticRenderFns","params","request","method","url","data","lessonId","extend","name","uploader","imageURL","videoId","isUploadSuccess","computed","video","$refs","image","created","initUploader","loadHeadTitle","methods","$route","query","theme","sectionId","section","courseId","course","window","AliyunUpload","Vod","userId","region","partSize","parallel","retryCount","retryDuration","onUploadstarted","uploadInfo","console","log","isImage","uploadAddressAndAuth","fileName","file","imageUrl","setUploadAuthAndAddress","uploadAuth","uploadAddress","imageId","onUploadSucceed","onUploadFailed","code","message","onUploadProgress","totalSize","loadedPercent","Math","floor","onUploadTokenExpired","onUploadEnd","coverImageUrl","files","fileId","timer","setInterval","clearInterval","imageFile","videoFile","addFile","startUpload","component","getSectionAndLesson","saveOrUpdateSection","getSectionById","saveOrUpdateLesson","getLessonById","getQueryCourses","changeState","saveOrUpdateCourse","uploadCourseImage","getCourseById","DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","match","error"],"mappings":"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","file":"js/course-video.f3af79e5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('el-card',[_c('div',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('div',[_vm._v(\"课程：\"+_vm._s(_vm.courseName))]),_c('div',[_vm._v(\"阶段：\"+_vm._s(_vm.sectionName))]),_c('div',[_vm._v(\"课时：\"+_vm._s(_vm.lessonName))])]),_c('el-form',{attrs:{\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"视频上传\"}},[_c('input',{ref:\"video-file\",attrs:{\"type\":\"file\"}})]),_c('el-form-item',{attrs:{\"label\":\"封面上传\"}},[_c('input',{ref:\"image-file\",attrs:{\"type\":\"file\"}})]),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleUpload}},[_vm._v(\"开始上传\")]),_c('el-button',{on:{\"click\":function($event){return _vm.$router.back()}}},[_vm._v(\"返回\")])],1),_c('el-form-item',[_c('p',[_vm._v(\"视频上传中：\"+_vm._s(_vm.uploadPercent)+\"%\")]),(_vm.isUploadSuccess)?_c('p',[_vm._v(\"视频转码中：\"+_vm._s(_vm.isTransCodeSuccess ? '完成' : '正在处理，请稍后'))]):_vm._e()])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * 阿里云上传相关请求模块\n */\n\nimport request from '@/utils/request'\n\nexport const getAliyunVideoUploadAddressAdnAuth = (params: any) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunVideoUploadAddressAdnAuth.json',\n    params\n  })\n}\n\nexport const getAliyunImagUploadAddressAdnAuth = () => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunImagUploadAddressAdnAuth.json'\n  })\n}\n\nexport const aliyunTransCode = (data: any) => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/upload/aliyunTransCode.json',\n    data\n  })\n}\n\nexport const getAliyunTransCodePercent = (lessonId: any) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/upload/aliyunTransCodePercent.json',\n    params: {\n      lessonId\n    }\n  })\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue'\nimport {\n  getAliyunVideoUploadAddressAdnAuth,\n  getAliyunImagUploadAddressAdnAuth,\n  aliyunTransCode,\n  getAliyunTransCodePercent\n} from '@/services/aliyun-upload'\nimport { getLessonById } from '@/services/course-lesson'\nimport { getSectionById } from '@/services/course-section'\nimport { getCourseById } from '@/services/course'\n\nexport default Vue.extend({\n  name: 'CourseVideo',\n  data () {\n    return {\n      uploader: null,\n      imageURL: '',\n      videoId: null,\n      uploadPercent: 0,\n      isUploadSuccess: false,\n      isTransCodeSuccess: false,\n      lessonName: null,\n      sectionName: null,\n      courseName: null\n    }\n  },\n  computed: {\n    video () {\n      return this.$refs['video-file']\n    },\n    image () {\n      return this.$refs['image-file']\n    }\n  },\n  created () {\n    this.initUploader()\n    this.loadHeadTitle()\n  },\n  methods: {\n    async loadHeadTitle () {\n      const { data } = await getLessonById(this.$route.query.lessonId)\n      this.lessonName = data.data.theme\n      const section = await getSectionById(data.data.sectionId)\n      this.sectionName = section.data.data.sectionName\n      const course = await getCourseById(data.data.courseId)\n      this.courseName = course.data.data.courseName\n    },\n    initUploader () {\n      this.uploader = new window.AliyunUpload.Vod({\n        // 阿里账号ID，必须有值\n        userId: '1618139964448548',\n        // 上传到视频点播的地域，默认值为'cn-shanghai'，//eu-central-1，ap-southeast-1\n        region: '',\n        // 分片大小默认1 MB，不能小于100 KB\n        partSize: 1048576,\n        // 并行上传分片个数，默认5\n        parallel: 5,\n        // 网络原因失败时，重新上传次数，默认为3\n        retryCount: 3,\n        // 网络原因失败时，重新上传间隔时间，默认为2秒\n        retryDuration: 2,\n        // 开始上传\n        onUploadstarted: async (uploadInfo: any) => {\n          console.log('onUploadstarted', uploadInfo)\n          // 1. 通过我们的后端获取上传凭证\n          let uploadAddressAndAuth\n          if (uploadInfo.isImage) {\n            // 获取图片上传凭证\n            const { data } = await getAliyunImagUploadAddressAdnAuth()\n            uploadAddressAndAuth = data.data\n            this.imageURL = uploadAddressAndAuth.imageURL\n          } else {\n            // 获取视频上传凭证\n            const { data } = await getAliyunVideoUploadAddressAdnAuth({\n              fileName: uploadInfo.file.name,\n              imageUrl: this.imageURL // 请确保一定是先上传图片\n            })\n            uploadAddressAndAuth = data.data\n            this.videoId = uploadAddressAndAuth.videoId\n          }\n          // 2. 调用 uploader.setUploadAuthAndAddress 设置上传凭证\n          (this.uploader as any).setUploadAuthAndAddress(\n            uploadInfo,\n            uploadAddressAndAuth.uploadAuth,\n            uploadAddressAndAuth.uploadAddress,\n            uploadAddressAndAuth.imageId || uploadAddressAndAuth.videoId\n          )\n          // 3. 设置好上传凭证确认没有问题，上传进度开始\n          // setUploadAuthAndAddress(uploadFileInfo, uploadAuth, uploadAddress, videoId)\n        },\n        // 文件上传成功\n        onUploadSucceed: function (uploadInfo: any) {\n          console.log('onUploadSucceed', uploadInfo)\n        },\n        // 文件上传失败\n        onUploadFailed: function (uploadInfo: any, code: any, message: any) {\n          console.log('onUploadFailed', uploadInfo, code, message)\n        },\n        // 文件上传进度，单位：字节\n        onUploadProgress: (\n          uploadInfo: any,\n          totalSize: any,\n          loadedPercent: any\n        ) => {\n          console.log('onUploadProgress', uploadInfo, totalSize, loadedPercent)\n          if (!uploadInfo.isImage) {\n            this.uploadPercent = Math.floor(loadedPercent * 100)\n          }\n        },\n        // 上传凭证或STS token超时\n        onUploadTokenExpired: function (uploadInfo: any) {\n          console.log('onUploadTokenExpired', uploadInfo)\n        },\n        // 全部文件上传结束\n        onUploadEnd: async (uploadInfo: any) => {\n          console.log('onUploadEnd', uploadInfo)\n          this.isUploadSuccess = true\n          // 请求转码\n          const { data } = await aliyunTransCode({\n            lessonId: this.$route.query.lessonId,\n            coverImageUrl: this.imageURL,\n            fileName: (this.video as any).files[0].name, // 文件名\n            fileId: this.videoId // 视频Id\n          })\n          console.log(data)\n          // 轮询查询转码进度\n          const timer = setInterval(async () => {\n            const { data } = await getAliyunTransCodePercent(this.$route.query.lessonId)\n            console.log(data.data)\n            if (data.data === 100) {\n              this.isTransCodeSuccess = true\n              window.clearInterval(timer)\n              console.log('转码成功')\n            }\n          }, 3000)\n        }\n      })\n    },\n    handleUpload () {\n      // 初始化上传状态\n      this.isUploadSuccess = false\n      this.isTransCodeSuccess = false\n      this.uploadPercent = 0\n      // 获取上传的文件\n      const imageFile = (this.image as any).files[0]\n      const videoFile = (this.video as any).files[0]\n      const uploader = this.uploader as any\n\n      // 将用户所选的文件添加到上传列表中\n      // 一旦开始上传，它就会按照列表中添加的顺序开始上传\n      uploader.addFile(imageFile, null, null, null, '{\"Vod\":{}}')\n      uploader.addFile(videoFile, null, null, null, '{\"Vod\":{}}')\n\n      // 开始上传，触发 onUploadstarted 事件\n      uploader.startUpload()\n    }\n  }\n})\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./video.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--14-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./video.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./video.vue?vue&type=template&id=70a9a4c0&scoped=true&\"\nimport script from \"./video.vue?vue&type=script&lang=ts&\"\nexport * from \"./video.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"70a9a4c0\",\n  null\n  \n)\n\nexport default component.exports","/**\n * 课程章节相关请求模块\n */\n\nimport request from '@/utils/request'\n\nexport const getSectionAndLesson = (courseId: string | number) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/section/getSectionAndLesson',\n    params: {\n      courseId\n    }\n  })\n}\n\nexport const saveOrUpdateSection = (data: any) => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/section/saveOrUpdateSection',\n    data\n  })\n}\n\nexport const getSectionById = (sectionId: string | number) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/section/getBySectionId',\n    params: {\n      sectionId\n    }\n  })\n}\n","/**\n * 课程课时相关请求模块\n */\n\nimport request from '@/utils/request'\n\nexport const saveOrUpdateLesson = (data: any) => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/lesson/saveOrUpdate',\n    data\n  })\n}\n\nexport const getLessonById = (lessonId: any) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/lesson/getById',\n    params: {\n      lessonId\n    }\n  })\n}\n","/**\n * 课程相关请求模块\n */\n\nimport request from '@/utils/request'\n\nexport const getQueryCourses = (data: any) => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/getQueryCourses',\n    data\n  })\n}\n\nexport const changeState = (params: any) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/changeState',\n    params\n  })\n}\n\nexport const saveOrUpdateCourse = (data: any) => {\n  return request({\n    method: 'POST',\n    url: '/boss/course/saveOrUpdateCourse',\n    data\n  })\n}\n\nexport const uploadCourseImage = (data: any,\n  onUploadProgress?: (progressEvent: ProgressEvent) => void) => {\n  // 该接口要求的请求数据类型是：multipart/form-data\n  // 所以需要提交 FormData 数据对象，ContenType 会被自动转换\n  return request({\n    method: 'POST',\n    url: '/boss/course/upload',\n    data,\n    // HTML5 新增的上传响应时间：progress（原生）\n    onUploadProgress\n  })\n}\n\nexport const getCourseById = (courseId: string | number) => {\n  return request({\n    method: 'GET',\n    url: '/boss/course/getCourseById',\n    // url: `/boss/course/getCourseById?courseId=${courseId}`,\n    params: {\n      courseId\n    }\n  })\n}\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n"],"sourceRoot":""}